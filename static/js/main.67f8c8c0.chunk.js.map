{"version":3,"sources":["utils/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","handleClick","selectedId","className","map","todo","classNames","id","completed","title","onClick","type","TodoFilter","handleChange","queryChange","clearQuery","query","onChange","event","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","user","closeWindow","useState","isLoading","setIsLoading","useEffect","href","email","name","App","setTodos","selectedTodo","setSelectedTodo","loaderIsShown","setLoaderIsShown","setUser","todosStatus","setTodosStatus","setQuery","todosFromServer","filteredTodos","filter","lowerQuery","toLowerCase","includes","getFilteredTodos","a","userId","currentUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67f8c8c0.chunk.js","sourcesContent":["export enum Status {\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n  ALL = 'all',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  handleClick: (todo: Todo) => void,\n  selectedId?: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleClick = () => { },\n  selectedId = 0,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': todo.id === selectedId,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                onClick={() => {\n                  handleClick(todo);\n                }}\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye': todo.id !== selectedId,\n                    'fa-eye-slash': todo.id === selectedId,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Status } from '../../utils/Status';\n\ntype Props = {\n  handleChange: (status: Status) => void,\n  queryChange: (value: string) => void,\n  clearQuery: () => void,\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  handleChange = () => { },\n  queryChange = () => { },\n  clearQuery = () => { },\n  query,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          onChange={(event) => handleChange(event.target.value as Status)}\n          data-cy=\"statusSelect\"\n        >\n          <option value={Status.ALL}>All</option>\n          <option value={Status.ACTIVE}>Active</option>\n          <option value={Status.COMPLETED}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        onChange={(event) => queryChange(event.target.value)}\n        value={query}\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            onClick={clearQuery}\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  user: User | null,\n  todo: Todo | null,\n  closeWindow: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  user,\n  todo,\n  closeWindow = () => { },\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 300);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={closeWindow}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todo?.completed\n                  ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  ) : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\nimport { Status } from './utils/Status';\n\ntype FilterParams = {\n  todosFromServer: Todo[],\n  todosStatus: Status,\n  query: string,\n};\n\nfunction getFilteredTodos({\n  todosFromServer,\n  todosStatus,\n  query,\n}: FilterParams) {\n  let filteredTodos = todosFromServer;\n\n  switch (todosStatus) {\n    case Status.ACTIVE:\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n      break;\n\n    case Status.COMPLETED:\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n      break;\n\n    default:\n      filteredTodos = [...filteredTodos];\n  }\n\n  const lowerQuery = query.toLowerCase();\n\n  filteredTodos = filteredTodos.filter(\n    todo => todo.title.toLowerCase().includes(lowerQuery),\n  );\n\n  return filteredTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [loaderIsShown, setLoaderIsShown] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n  const [todosStatus, setTodosStatus] = useState(Status.ALL);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoaderIsShown(false);\n    }, 300);\n  }, []);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        const filteredTodos = getFilteredTodos({\n          todosFromServer,\n          todosStatus,\n          query,\n        });\n\n        setTodos(filteredTodos);\n      });\n  }, [todos, todosStatus, query]);\n\n  const handleClick = async (todo: Todo) => {\n    setSelectedTodo(todo);\n\n    const currentUser = await getUser(todo.userId);\n\n    setUser(currentUser);\n  };\n\n  const closeWindow = () => {\n    setSelectedTodo(null);\n  };\n\n  const clearQuery = () => {\n    setQuery('');\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleChange={setTodosStatus}\n                queryChange={setQuery}\n                clearQuery={clearQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loaderIsShown\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todos={todos}\n                    selectedId={selectedTodo?.id}\n                    handleClick={handleClick}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          user={user}\n          todo={selectedTodo}\n          closeWindow={closeWindow}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}